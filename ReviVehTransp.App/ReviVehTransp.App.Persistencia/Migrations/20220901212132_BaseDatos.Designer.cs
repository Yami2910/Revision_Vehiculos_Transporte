// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReviVehTransp.App.Persistencia;

#nullable disable

namespace ReviVehTransp.App.Persistencia.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20220901212132_BaseDatos")]
    partial class BaseDatos
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ReviVehTransp.App.Dominio.ConductorVehiculo", b =>
                {
                    b.Property<int>("VehiculoId")
                        .HasColumnType("int");

                    b.Property<int>("ConductorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaAsignacion")
                        .HasColumnType("datetime2");

                    b.HasKey("VehiculoId", "ConductorId");

                    b.HasIndex("ConductorId");

                    b.ToTable("ConductorVehiculos");
                });

            modelBuilder.Entity("ReviVehTransp.App.Dominio.MecanicoVehiculo", b =>
                {
                    b.Property<int>("VehiculoId")
                        .HasColumnType("int");

                    b.Property<int>("MecanicoId")
                        .HasColumnType("int");

                    b.HasKey("VehiculoId", "MecanicoId");

                    b.HasIndex("MecanicoId");

                    b.ToTable("MecanicoVehiculos");
                });

            modelBuilder.Entity("ReviVehTransp.App.Dominio.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroDocumento")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NumeroDocumento")
                        .IsUnique();

                    b.ToTable("Personas");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Persona");
                });

            modelBuilder.Entity("ReviVehTransp.App.Dominio.PropietarioVehiculo", b =>
                {
                    b.Property<int>("IdVehiculo")
                        .HasColumnType("int");

                    b.Property<int>("IdDuenhoVehiculo")
                        .HasColumnType("int");

                    b.HasKey("IdVehiculo", "IdDuenhoVehiculo");

                    b.HasIndex("IdDuenhoVehiculo");

                    b.HasIndex("IdVehiculo")
                        .IsUnique();

                    b.ToTable("PropietarioVehiculos");
                });

            modelBuilder.Entity("ReviVehTransp.App.Dominio.Vehiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CapacidadPasajeros")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CilindrajeMotor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescripcionGeneral")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModeloAnio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtrasCaracteristicas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaisOrigen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Vehiculos");
                });

            modelBuilder.Entity("ReviVehTransp.App.Dominio.Auxiliar", b =>
                {
                    b.HasBaseType("ReviVehTransp.App.Dominio.Persona");

                    b.Property<int>("Rol")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Auxiliar");
                });

            modelBuilder.Entity("ReviVehTransp.App.Dominio.Conductor", b =>
                {
                    b.HasBaseType("ReviVehTransp.App.Dominio.Persona");

                    b.Property<string>("NumeroTelefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoLicencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Conductor");
                });

            modelBuilder.Entity("ReviVehTransp.App.Dominio.DuenhoVehiculo", b =>
                {
                    b.HasBaseType("ReviVehTransp.App.Dominio.Persona");

                    b.Property<string>("CiudadResidencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaComprador")
                        .HasColumnType("datetime2");

                    b.HasDiscriminator().HasValue("DuenhoVehiculo");
                });

            modelBuilder.Entity("ReviVehTransp.App.Dominio.Mecanico", b =>
                {
                    b.HasBaseType("ReviVehTransp.App.Dominio.Persona");

                    b.Property<string>("NivelEstudio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Mecanico");
                });

            modelBuilder.Entity("ReviVehTransp.App.Dominio.ConductorVehiculo", b =>
                {
                    b.HasOne("ReviVehTransp.App.Dominio.Conductor", "Conductor")
                        .WithMany("ConductorVehiculos")
                        .HasForeignKey("ConductorId")
                        .IsRequired();

                    b.HasOne("ReviVehTransp.App.Dominio.Vehiculo", "Vehiculo")
                        .WithMany("ConductorVehiculos")
                        .HasForeignKey("VehiculoId")
                        .IsRequired();

                    b.Navigation("Conductor");

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("ReviVehTransp.App.Dominio.MecanicoVehiculo", b =>
                {
                    b.HasOne("ReviVehTransp.App.Dominio.Mecanico", "Mecanico")
                        .WithMany("MecanicoVehiculos")
                        .HasForeignKey("MecanicoId")
                        .IsRequired();

                    b.HasOne("ReviVehTransp.App.Dominio.Vehiculo", "Vehiculo")
                        .WithMany("MecanicoVehiculos")
                        .HasForeignKey("VehiculoId")
                        .IsRequired();

                    b.Navigation("Mecanico");

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("ReviVehTransp.App.Dominio.PropietarioVehiculo", b =>
                {
                    b.HasOne("ReviVehTransp.App.Dominio.DuenhoVehiculo", "DuenhoVehiculo")
                        .WithMany("PropietarioVehiculos")
                        .HasForeignKey("IdDuenhoVehiculo")
                        .IsRequired();

                    b.HasOne("ReviVehTransp.App.Dominio.Vehiculo", "Vehiculo")
                        .WithOne("PropietarioVehiculo")
                        .HasForeignKey("ReviVehTransp.App.Dominio.PropietarioVehiculo", "IdVehiculo")
                        .IsRequired();

                    b.Navigation("DuenhoVehiculo");

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("ReviVehTransp.App.Dominio.Vehiculo", b =>
                {
                    b.Navigation("ConductorVehiculos");

                    b.Navigation("MecanicoVehiculos");

                    b.Navigation("PropietarioVehiculo")
                        .IsRequired();
                });

            modelBuilder.Entity("ReviVehTransp.App.Dominio.Conductor", b =>
                {
                    b.Navigation("ConductorVehiculos");
                });

            modelBuilder.Entity("ReviVehTransp.App.Dominio.DuenhoVehiculo", b =>
                {
                    b.Navigation("PropietarioVehiculos");
                });

            modelBuilder.Entity("ReviVehTransp.App.Dominio.Mecanico", b =>
                {
                    b.Navigation("MecanicoVehiculos");
                });
#pragma warning restore 612, 618
        }
    }
}
